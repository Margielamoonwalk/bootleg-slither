https://repl.it/@VictorFloresBen/dota-3#main.py

import pygame # impots pygame
import math #needed for math part
import random

#spunch bob
print("     .--..--..--..--..--..--.")
print("    .' \  (`._   (_)     _   \ ")
print("  .'    |  '._)         (_)  |")
print("  \ _.')\      .----..---.   /")
print("  |(_.'  |    /    .-\-.  \  |")
print("  \     0|    |   ( O| O) | o|")
print("   |  _  |  .--.____.'._.-.  |")
print("   \ (_) | o         -` .-`  |")
print("    |    \   |`-._ _ _ _ _\ /")
print("    \    |   |  `. |_||_|   |")
print("    | o  |    \_      \     |     -.   .-.")
print("    |.-.  \     `--..-'   O |     `.`-' .'")
print("  _.'  .' |     `-.-'      /-.__   ' .-'")
print(".' `-.` '.|='=.='=.='=.='=|._/_ `-'.'")
print("`-._  `.  |________/\_____| ")

pygame.init()
pygame.display.set_caption("slither")
screen = pygame.display.set_mode((400,400))
clock = pygame.time.Clock()


# game variables
doExit = False

# player variables
xPos = 200
yPos = 200
Vx = 1
Vy = 1
oldX = 200
oldY = 200
counter = 0
# player 2 variables
xPos2 = 200
yPos2 = 200
Vx2 = 1
Vy2 = 1
oldX2 = 200
oldY2 = 200
#+++++++++++++++++++++++++++++++++++++++++++++++++
class pellet:
  def __init__(self,xpos,ypos,red,green,blue,radius):
    self.xpos = xpos
    self.ypos = ypos
    self.red = red 
    self.green = green
    self.blue = blue
    self.radius = radius

  def draw(self):
    pygame.draw.circle(screen, (self.red, self.green , self.blue), (self.xpos, self.ypos), self.radius)

  def collide (self,x,y):
    if math.sqrt((x-self.xpos)*(x-self.xpos)+(y-self.ypos)*(y-self.ypos)) < self.radius + 6:
      self.xpos=random.randrange(0,400)
      self.ypos=random.randrange(0,400)
      self.red=random.randrange(0,255)
      self.blue=random.randrange(0,255)
      self.green=random.randrange(0,255)
      self.radius=random.randrange (0,10)
      return True

#end of class pellet

#snake tail growth
class tailSeg:
  def __init__(self,xpos,ypos):
    self.xpos = xpos
    self.ypos = ypos

  def update(self,xpos,ypos):
    self.xpos = xpos
    self.ypos = ypos
    
  def draw(self):
    pygame.draw.circle(screen,(200,0,0),(self.xpos,self.ypos),12)

  def collide(self,x,y):
    if math.sqrt((x-self.xpos)*(x-self.xpos)+(y-self.ypos)*(y-self.ypos)) <6:
      return True
    



pelletBag = list()
tail = list()
tail2 = list()
#push 10 pellets into the list
for i in range (10):
  pelletBag.append(pellet(random.randrange(0,400), random.randrange (0,400),random.randrange(0,255),random.randrange(0,255),random.randrange(0,255),random.randrange(5,17)))

#game loop 
while not doExit:

  #event/input section 
  clock.tick(60)

  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      doExit = True

  if event.type == pygame.MOUSEMOTION:
    mousePos = event.pos

    if mousePos[0] > xPos:
      Vx = 1
    else:
      Vx = -1
    if mousePos[1] > yPos:
      Vy = 1
    else:
      Vy = -1
      
    # player 2 input
  keys = pygame.key.get_pressed()
  if keys[pygame.K_LEFT]:
    xPos2-= 1
  if keys[pygame.K_RIGHT]:
    xPos2+=1
  if keys[pygame.K_UP]:
    yPos2-=1
  if keys[pygame.K_DOWN]:
    yPos2+=1

  counter+=1
  if counter == 20:#slows down movement of tail
    counter = 0
    oldX = xPos
    oldY = yPos
    oldX2 = xPos2
    oldY2 = yPos2

    #update tail position (move the tail)
    if(len(tail)>2):
      for i in range(len(tail)):
        tail[len(tail)-i-1].xpos = tail[len(tail)-i-2].xpos
        tail[len(tail)-i-1].ypos = tail[len(tail)-i-2].ypos
    if (len(tail2)>2):
      for i in range (len(tail2)):
        tail2[len(tail2)-i-1].xpos = tail2[len(tail2)-i-2].xpos
        tail2[len(tail2)-i-1].ypos = tail2[len(tail2)-i-2].ypos

    if(len(tail)>0):
      tail[0].update(oldX,oldY)
    if(len(tail2)>0):
      tail2[0].update(oldX2,oldY2)
       
      
  
  #physiscs section
  #updates circle positon 
  xPos += Vx
  yPos += Vy
  for i in range (10):
    if pelletBag[i].collide(xPos,yPos) == True:
      tail.append(tailSeg(oldX,oldY))
    if pelletBag[i].collide(xPos2,yPos2) == True:
      tail2.append(tailSeg(oldX2,oldY2))

  if xPos < 0 or xPos > 400 or yPos < 0 or yPos > 400:
    doExit=True;
  if xPos2 < 0 or xPos2 > 400 or yPos2 < 0 or yPos2 > 400:
    doExit=True;

  #player tail collision
  #p2 tail collision
  print(len(tail2))
  if i in range(len(tail2)):
    print("checking if 2 has hit 1")
    if tail2[i].collide(xPos,yPos)== True:
      print ("p1 hit p2 tail")
      doExit = True
  # p1 tail collision
  if i in range(len(tail)):
    if tail[i].collide(xPos2,yPos2)== True:
      print ("p2 hit p1 tail")
      doExit = True

  for i in range(10):
    pelletBag[i].collide(xPos,yPos)

#render section ==============================================
  screen.fill((255,255,255)) # wipe screen (without this, thigns smear)
  for i in range(10):
    pelletBag[i].draw()


  for i in range(len(tail)):
    tail[i].draw()

  for i in range(len(tail2)):
    tail2[i].draw()

  pygame.draw.circle(screen, (200,0,200),(xPos,yPos),12)

  pygame.draw.circle(screen, (14, 207, 40),(xPos2,yPos2),12)

  pygame.display.flip()


# end game loop

pygame.quit()
